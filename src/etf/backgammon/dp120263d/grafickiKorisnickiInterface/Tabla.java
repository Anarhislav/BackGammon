/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etf.backgammon.dp120263d.grafickiKorisnickiInterface;

import etf.backgammon.dp120263d.Board;
import etf.backgammon.dp120263d.Covek;
import etf.backgammon.dp120263d.Igrac;
import etf.backgammon.dp120263d.Racunar;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Drakulic
 */
public class Tabla extends javax.swing.JFrame {
    
    int firstRolled = 0;
    int roll = 0;
    int pickUp = 0;
    int putDown = 0;
    String stanje = "pickUp";
    int pickedUpFrom;
    int puttedTo;
    Igrac turnOf = null;
    int cekajUpis = 0;
    int pisi = 0;

    public Tabla() {
        
        this.getContentPane().setBackground(Color.red);
        initComponents();
        IskljuciSveDugmice();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Polje00 = new javax.swing.JButton();
        Polje01 = new javax.swing.JButton();
        Polje02 = new javax.swing.JButton();
        Polje03 = new javax.swing.JButton();
        Polje04 = new javax.swing.JButton();
        Polje05 = new javax.swing.JButton();
        BlackBar = new javax.swing.JButton();
        Polje06 = new javax.swing.JButton();
        Polje07 = new javax.swing.JButton();
        Polje08 = new javax.swing.JButton();
        Polje09 = new javax.swing.JButton();
        Polje010 = new javax.swing.JButton();
        Polje011 = new javax.swing.JButton();
        BlackGoal = new javax.swing.JButton();
        Polje18 = new javax.swing.JButton();
        Polje19 = new javax.swing.JButton();
        Polje110 = new javax.swing.JButton();
        Polje111 = new javax.swing.JButton();
        WhiteGoal = new javax.swing.JButton();
        Polje10 = new javax.swing.JButton();
        Polje11 = new javax.swing.JButton();
        Polje12 = new javax.swing.JButton();
        Polje13 = new javax.swing.JButton();
        Polje14 = new javax.swing.JButton();
        Polje15 = new javax.swing.JButton();
        WhiteBar = new javax.swing.JButton();
        Polje16 = new javax.swing.JButton();
        Polje17 = new javax.swing.JButton();
        whiteRoll = new javax.swing.JButton();
        whiteDice1 = new javax.swing.JTextField();
        whiteDice2 = new javax.swing.JTextField();
        blackDice1 = new javax.swing.JTextField();
        blackDice2 = new javax.swing.JTextField();
        blackRoll = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        scoreWhite = new javax.swing.JTextField();
        scoreBlack = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        IgraSeDo = new javax.swing.JTextField();
        uputstvo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TurnOF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        heuristikaWhite = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        heuristikaBlack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setForeground(java.awt.Color.yellow);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Polje00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje00.setEnabled(false);
        Polje00.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje00.setIconTextGap(0);
        Polje00.setName("12"); // NOI18N
        Polje00.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje01.setEnabled(false);
        Polje01.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje01.setIconTextGap(0);
        Polje01.setName("13"); // NOI18N
        Polje01.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje02.setEnabled(false);
        Polje02.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje02.setIconTextGap(0);
        Polje02.setName("14"); // NOI18N
        Polje02.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje03.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje03.setEnabled(false);
        Polje03.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje03.setIconTextGap(0);
        Polje03.setName("15"); // NOI18N
        Polje03.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje04.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje04.setEnabled(false);
        Polje04.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje04.setIconTextGap(0);
        Polje04.setName("16"); // NOI18N
        Polje04.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje05.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje05.setEnabled(false);
        Polje05.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje05.setIconTextGap(0);
        Polje05.setName("17"); // NOI18N
        Polje05.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        BlackBar.setBackground(new java.awt.Color(255, 255, 255));
        BlackBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Bar_0.png"))); // NOI18N
        BlackBar.setEnabled(false);
        BlackBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BlackBar.setIconTextGap(0);
        BlackBar.setName("BlackBar"); // NOI18N
        BlackBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        BlackBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje06.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje06.setEnabled(false);
        Polje06.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje06.setIconTextGap(0);
        Polje06.setName("18"); // NOI18N
        Polje06.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje07.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje07.setEnabled(false);
        Polje07.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje07.setIconTextGap(0);
        Polje07.setName("19"); // NOI18N
        Polje07.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje08.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje08.setEnabled(false);
        Polje08.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje08.setIconTextGap(0);
        Polje08.setName("20"); // NOI18N
        Polje08.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje08.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje09.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje09.setEnabled(false);
        Polje09.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje09.setIconTextGap(0);
        Polje09.setName("21"); // NOI18N
        Polje09.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje09.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje010.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje010.setEnabled(false);
        Polje010.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje010.setIconTextGap(0);
        Polje010.setName("22"); // NOI18N
        Polje010.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje010.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje011.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeGore1_0.png"))); // NOI18N
        Polje011.setEnabled(false);
        Polje011.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje011.setIconTextGap(0);
        Polje011.setName("23"); // NOI18N
        Polje011.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje011.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        BlackGoal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Goal_0.png"))); // NOI18N
        BlackGoal.setEnabled(false);
        BlackGoal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BlackGoal.setIconTextGap(0);
        BlackGoal.setName("BlackGoal"); // NOI18N
        BlackGoal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        BlackGoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje18.setEnabled(false);
        Polje18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje18.setIconTextGap(0);
        Polje18.setName("3"); // NOI18N
        Polje18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje19.setEnabled(false);
        Polje19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje19.setIconTextGap(0);
        Polje19.setName("2"); // NOI18N
        Polje19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje110.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje110.setEnabled(false);
        Polje110.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje110.setIconTextGap(0);
        Polje110.setName("1"); // NOI18N
        Polje110.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje110.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje111.setEnabled(false);
        Polje111.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje111.setIconTextGap(0);
        Polje111.setName("0"); // NOI18N
        Polje111.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        WhiteGoal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Goal_0.png"))); // NOI18N
        WhiteGoal.setEnabled(false);
        WhiteGoal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        WhiteGoal.setIconTextGap(0);
        WhiteGoal.setName("WhiteGoal"); // NOI18N
        WhiteGoal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        WhiteGoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje10.setAlignmentY(0.0F);
        Polje10.setEnabled(false);
        Polje10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje10.setIconTextGap(0);
        Polje10.setName("11"); // NOI18N
        Polje10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje11.setEnabled(false);
        Polje11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje11.setIconTextGap(0);
        Polje11.setName("10"); // NOI18N
        Polje11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje12.setEnabled(false);
        Polje12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje12.setIconTextGap(0);
        Polje12.setName("9"); // NOI18N
        Polje12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje13.setEnabled(false);
        Polje13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje13.setIconTextGap(0);
        Polje13.setName("8"); // NOI18N
        Polje13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje14.setEnabled(false);
        Polje14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje14.setIconTextGap(0);
        Polje14.setName("7"); // NOI18N
        Polje14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje15.setEnabled(false);
        Polje15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje15.setIconTextGap(0);
        Polje15.setName("6"); // NOI18N
        Polje15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        WhiteBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Bar_0.png"))); // NOI18N
        WhiteBar.setEnabled(false);
        WhiteBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        WhiteBar.setIconTextGap(0);
        WhiteBar.setName("WhiteBar"); // NOI18N
        WhiteBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        WhiteBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje16.setEnabled(false);
        Polje16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje16.setIconTextGap(0);
        Polje16.setName("5"); // NOI18N
        Polje16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        Polje17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/PoljeDole1_0.png"))); // NOI18N
        Polje17.setEnabled(false);
        Polje17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Polje17.setIconTextGap(0);
        Polje17.setName("4"); // NOI18N
        Polje17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PritisnutoDugme(evt);
            }
        });
        Polje17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DugmePritisnuto(evt);
            }
        });

        whiteRoll.setText("ROLL");
        whiteRoll.setEnabled(false);
        whiteRoll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                whiteRollMouseClicked(evt);
            }
        });
        whiteRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiteRollActionPerformed(evt);
            }
        });

        whiteDice1.setEditable(false);

        whiteDice2.setEditable(false);

        blackDice1.setEditable(false);

        blackDice2.setEditable(false);

        blackRoll.setText("ROLL");
        blackRoll.setEnabled(false);
        blackRoll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blackRollMouseClicked(evt);
            }
        });
        blackRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackRollActionPerformed(evt);
            }
        });

        jLabel1.setText("WHITE");

        scoreWhite.setEditable(false);

        scoreBlack.setEditable(false);

        jLabel2.setText("BLACK");

        jLabel3.setText("IGRA SE DO");

        IgraSeDo.setEditable(false);

        jLabel4.setText("TURN OF");

        TurnOF.setEditable(false);
        TurnOF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TurnOFActionPerformed(evt);
            }
        });

        jLabel5.setText("PROCENA TRENUTNOG STANJA");

        jLabel6.setText("WHITE");

        jLabel7.setText("BLACK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Polje00, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Polje01, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(whiteRoll)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Polje10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Polje11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Polje02, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addComponent(Polje12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(whiteDice2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(whiteDice1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(blackDice1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(blackDice2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(blackRoll)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Polje13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Polje03, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Polje14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Polje04, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Polje05, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(scoreWhite, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Polje15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(IgraSeDo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(539, 539, 539))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(BlackGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BlackBar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(WhiteBar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Polje06, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(scoreBlack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Polje16, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(Polje17, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(Polje18, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(Polje19, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(Polje110, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(Polje111, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(Polje07, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(Polje08, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(Polje09, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(Polje010, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(Polje011, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(WhiteGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addGap(36, 36, 36))))))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(uputstvo, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(TurnOF, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(heuristikaWhite)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(heuristikaBlack)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(heuristikaWhite)
                    .addComponent(jLabel7)
                    .addComponent(heuristikaBlack))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BlackGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(blackDice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(blackDice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(blackRoll)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Polje05, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Polje010, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Polje011, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(whiteRoll)
                            .addComponent(whiteDice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(whiteDice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(scoreWhite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scoreBlack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Polje07, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Polje06, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BlackBar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Polje03, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Polje00, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Polje01, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Polje02, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Polje04, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Polje08, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Polje09, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IgraSeDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(41, 41, 41)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Polje111, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(WhiteGoal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Polje19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(WhiteBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Polje10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Polje12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Polje18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Polje110, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uputstvo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(TurnOF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        Polje00.getAccessibleContext().setAccessibleName("12");
        Polje01.getAccessibleContext().setAccessibleName("13");
        Polje02.getAccessibleContext().setAccessibleName("14");
        Polje03.getAccessibleContext().setAccessibleName("15");
        Polje04.getAccessibleContext().setAccessibleName("16");
        Polje05.getAccessibleContext().setAccessibleName("17");
        BlackBar.getAccessibleContext().setAccessibleName("BlackBar");
        Polje06.getAccessibleContext().setAccessibleName("18");
        Polje07.getAccessibleContext().setAccessibleName("19");
        Polje08.getAccessibleContext().setAccessibleName("20");
        Polje09.getAccessibleContext().setAccessibleName("21");
        Polje010.getAccessibleContext().setAccessibleName("22");
        Polje011.getAccessibleContext().setAccessibleName("23");
        BlackGoal.getAccessibleContext().setAccessibleName("BlackGoal");
        Polje18.getAccessibleContext().setAccessibleName("3");
        Polje19.getAccessibleContext().setAccessibleName("2");
        Polje110.getAccessibleContext().setAccessibleName("1");
        Polje111.getAccessibleContext().setAccessibleName("0");
        WhiteGoal.getAccessibleContext().setAccessibleName("WhiteGoal");
        WhiteGoal.getAccessibleContext().setAccessibleDescription("");
        Polje10.getAccessibleContext().setAccessibleName("11");
        Polje11.getAccessibleContext().setAccessibleName("10");
        Polje12.getAccessibleContext().setAccessibleName("9");
        Polje13.getAccessibleContext().setAccessibleName("8");
        Polje14.getAccessibleContext().setAccessibleName("7");
        Polje15.getAccessibleContext().setAccessibleName("6");
        WhiteBar.getAccessibleContext().setAccessibleName("WhiteBar");
        Polje16.getAccessibleContext().setAccessibleName("5");
        Polje17.getAccessibleContext().setAccessibleName("4");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void blackRollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blackRollMouseClicked

    }//GEN-LAST:event_blackRollMouseClicked

    private void whiteRollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_whiteRollMouseClicked

    }//GEN-LAST:event_whiteRollMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

        this.setBackground(Color.red);
        this.OsveziTablu();
    }//GEN-LAST:event_formWindowActivated

    private void PritisnutoDugme(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PritisnutoDugme


    }//GEN-LAST:event_PritisnutoDugme

    private void DugmePritisnuto(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DugmePritisnuto
        // TODO add your handling code here:
        Board board = Board.mainTable;
        String ime = ((JButton) evt.getSource()).getName();

        if (ime == "BlackBar") {
            board.barBlack--;
            stanje = "putDown";
            pickUp = 1;
            pickedUpFrom = -1;
        } else if (ime == "WhiteBar") {
            board.barWhite--;
            stanje = "putDown";
            pickUp = 1;
            pickedUpFrom = 24;
        } else if (ime == "BlackGoal") {
            board.goalBlack++;
            stanje = "pickUp";
            putDown = 1;
            puttedTo = 24;

            pisi = 1;
        } else if (ime == "WhiteGoal") {
            board.goalWhite++;
            stanje = "pickUp";
            putDown = 1;
            puttedTo = -1;
            pisi = 1;
        } else {

            int poz = Integer.parseInt(ime);
            int sabirac;
            if (turnOf.boja == "white") {
                sabirac = 1;
            } else {
                sabirac = -1;
            }
            if (stanje == "pickUp") {
                board.table[poz] -= sabirac;
                stanje = "putDown";
                pickUp = 1;
                pickedUpFrom = poz;
            } else if (stanje == "putDown") {
                if (sabirac == 1 && board.table[poz] == -1) {
                    board.table[poz] = 1;
                    board.barBlack++;
                } else if (sabirac == -1 && board.table[poz] == 1) {
                    board.table[poz] = -1;
                    board.barWhite++;
                } else {
                    board.table[poz] += sabirac;
                }
                stanje = "pickUp";
                putDown = 1;
                puttedTo = poz;
                pisi = 1;
            }

        }

        OsveziTablu();

    }//GEN-LAST:event_DugmePritisnuto

    private void whiteRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiteRollActionPerformed
        // TODO add your handling code here:
        firstRolled = 1;
        roll = 1;
        double dice1 = Math.random() * 6 + 1;
        int d1 = (int) dice1;

        double dice2 = Math.random() * 6 + 1;
        int d2 = (int) dice2;

        whiteDice1.setText(Integer.toString(d1));
        whiteDice2.setText(Integer.toString(d2));
        cekajUpis = 1;
        whiteRoll.setEnabled(false);
    }//GEN-LAST:event_whiteRollActionPerformed

    private void blackRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackRollActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        roll = 1;
        firstRolled = 1;
        double dice1 = Math.random() * 6 + 1;
        int d1 = (int) dice1;

        double dice2 = Math.random() * 6 + 1;
        int d2 = (int) dice2;

        blackDice1.setText(Integer.toString(d1));
        blackDice2.setText(Integer.toString(d2));
        cekajUpis = 1;
        blackRoll.setEnabled(false);
    }//GEN-LAST:event_blackRollActionPerformed

    private void TurnOFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TurnOFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TurnOFActionPerformed
    public void IskljuciSveDugmice() {
        BlackBar.setEnabled(false);
        WhiteBar.setEnabled(false);
        BlackGoal.setEnabled(false);
        WhiteGoal.setEnabled(false);
        Polje00.setEnabled(false);
        Polje01.setEnabled(false);
        Polje02.setEnabled(false);
        Polje03.setEnabled(false);
        Polje04.setEnabled(false);
        Polje05.setEnabled(false);
        Polje06.setEnabled(false);
        Polje07.setEnabled(false);
        Polje08.setEnabled(false);
        Polje09.setEnabled(false);
        Polje010.setEnabled(false);
        Polje011.setEnabled(false);
        Polje10.setEnabled(false);
        Polje11.setEnabled(false);
        Polje12.setEnabled(false);
        Polje13.setEnabled(false);
        Polje14.setEnabled(false);
        Polje15.setEnabled(false);
        Polje16.setEnabled(false);
        Polje17.setEnabled(false);
        Polje18.setEnabled(false);
        Polje19.setEnabled(false);
        Polje110.setEnabled(false);
        Polje111.setEnabled(false);
    }

    // poziva Covek igrac kada treba odigrat firstRoll
    public int OmoguciFirstRoll(Igrac i) {
        TurnOF.setText(i.boja + "y");
        turnOf = i;
        if (i.boja == "white") {
            whiteRoll.setEnabled(true);
        } else {
            blackRoll.setEnabled(true);
        }
        while (firstRolled == 0) {
            System.out.print("");
        }

        int rez = 0;
        while (cekajUpis == 0) {
            System.out.print("");
        }
        cekajUpis = 0;
        if (i.boja == "white") {
            rez = Integer.parseInt(whiteDice1.getText());
            whiteRoll.setEnabled(false);
        } else {
            rez = Integer.parseInt(blackDice1.getText());
            blackRoll.setEnabled(false);
        }
        firstRolled = 0;
        return rez;
    }

    // poziva covek igrac kada treba odigrat roll
    public int OmoguciRoll(Igrac i) {
        Board board = Board.mainTable;
        TurnOF.setText(i.boja + "y");
        turnOf = i;
        roll = 0;
        if (i.boja == "white") {
            whiteRoll.setEnabled(true);
        } else {
            blackRoll.setEnabled(true);
        }
        while (roll == 0) {
            System.out.print("");
        }

        while (cekajUpis == 0) {
            System.out.print("");
        }
        cekajUpis = 0;

        int rez = 0;
        if (i.boja == "white") {
            rez = Integer.parseInt(whiteDice1.getText());
            rez = rez * 10;
            rez += Integer.parseInt(whiteDice2.getText());
            whiteRoll.setEnabled(false);
        } else {
            rez = Integer.parseInt(blackDice1.getText());
            rez = rez * 10;
            rez += Integer.parseInt(blackDice2.getText());
            blackRoll.setEnabled(false);
        }

        roll = 0;

        return rez;

    }

    public int CitajPrvoDugme(String boja) {
        int r = 0;

        if (boja == "white") {
            r = Integer.parseInt(whiteDice1.getText());
        }

        if (boja == "black") {
            r = Integer.parseInt(blackDice1.getText());
        }

        return r;
    }

    public int CitajObaDugmeta(String boja) {
        int d1 = 0;
        int d2 = 0;
        if (boja == "white") {
            d1 = Integer.parseInt(whiteDice1.getText());
            d2 = Integer.parseInt(whiteDice2.getText());
        }
        if (boja == "black") {
            d1 = Integer.parseInt(blackDice1.getText());
            d2 = Integer.parseInt(blackDice2.getText());
        }
        return d1 * 10 + d2;
    }

    private String ShifrujPoljeTable(int i) {
        Board board = Board.mainTable;
        String pre_ime = "";
        String post_ime = "";
        String rezultat = "";
        if (i > 11) {
            pre_ime = "PoljeGore1";
        } else if (i <= 11) {
            pre_ime = "PoljeDole1";
        }

        if (board.table[i] == 0) {
            post_ime = "_0.png";
        }
        if (board.table[i] > 0) {
            post_ime = "_" + Integer.toString(board.table[i]) + "_w.png";
        }
        if (board.table[i] < 0) {
            post_ime = "_" + Integer.toString(-board.table[i]) + "_b.png";
        }

        rezultat = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/" + pre_ime + post_ime;

        return rezultat;

    }

    private String ShifrujOstalaPolja(String ime) {
        Board board = Board.mainTable;
        String rez = "";
        switch (ime) {
            case "BlackBar":
                if (board.barBlack == 0) {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Bar_0.png";
                } else {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Bar_" + Integer.toString(board.barBlack) + "_b.png";
                }
                break;
            case "WhiteBar":
                if (board.barWhite == 0) {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Bar_0.png";
                } else {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Bar_" + Integer.toString(board.barWhite) + "_w.png";
                }
                break;

            case "WhiteGoal":
                if (board.goalWhite == 0) {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Goal_0.png";
                } else {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Goal_" + Integer.toString(board.goalWhite) + "_w.png";
                }
                break;

            case "BlackGoal":
                if (board.goalBlack == 0) {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Goal_0.png";
                } else {
                    rez = "/etf/backgammon/dp120263d/grafickiKorisnickiInterface/slike/Goal_" + Integer.toString(board.goalBlack) + "_b.png";
                }
                break;
            default:
                break;
        };
        return rez;
    }

    public void OsveziTablu() { //azuriranje gui-a, ucitavamo ono sto je u nizu board.tabla

        Board board = Board.mainTable;

        Polje00.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(12))));
        Polje00.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(12))));
        Polje01.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(13))));
        Polje01.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(13))));
        Polje02.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(14))));
        Polje02.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(14))));
        Polje03.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(15))));
        Polje03.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(15))));
        Polje04.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(16))));
        Polje04.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(16))));
        Polje05.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(17))));
        Polje05.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(17))));
        Polje06.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(18))));
        Polje06.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(18))));
        Polje07.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(19))));
        Polje07.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(19))));
        Polje08.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(20))));
        Polje08.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(20))));
        Polje09.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(21))));
        Polje09.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(21))));
        Polje010.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(22))));
        Polje010.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(22))));
        Polje011.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(23))));
        Polje011.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(23))));

        Polje10.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(11))));
        Polje10.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(11))));
        Polje11.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(10))));
        Polje11.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(10))));
        Polje12.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(9))));
        Polje12.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(9))));
        Polje13.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(8))));
        Polje13.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(8))));
        Polje14.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(7))));
        Polje14.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(7))));
        Polje15.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(6))));
        Polje15.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(6))));
        Polje16.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(5))));
        Polje16.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(5))));
        Polje17.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(4))));
        Polje17.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(4))));
        Polje18.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(3))));
        Polje18.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(3))));
        Polje19.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(2))));
        Polje19.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(2))));
        Polje110.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(1))));
        Polje110.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(1))));
        Polje111.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(0))));
        Polje111.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujPoljeTable(0))));

        BlackBar.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("BlackBar"))));
        BlackBar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("BlackBar"))));
        WhiteBar.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("WhiteBar"))));
        WhiteBar.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("WhiteBar"))));
        BlackGoal.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("BlackGoal"))));
        BlackGoal.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("BlackGoal"))));
        WhiteGoal.setIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("WhiteGoal"))));
        WhiteGoal.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource(ShifrujOstalaPolja("WhiteGoal"))));
        if (turnOf != null) {
            if (turnOf.boja == "white") {
                heuristikaWhite.setText(Integer.toString(board.Heuristic(turnOf)));
            }
            if (turnOf.boja == "black") {
                heuristikaBlack.setText(Integer.toString(board.Heuristic(turnOf)));
            }
        }

    }//azuriranje gui-a

    //ENABLUEJM dugmice sa kojih mogu da skinem token
    public boolean MoguciPoteziPickUp(int kocka1, int kocka2, Igrac igrac) {
        boolean imaPotez = false;
        turnOf = igrac;
        Board board = Board.mainTable;
        if (igrac.boja == "white") {
            if (board.barWhite > 0) {
                if (board.table[24 - kocka1] >= -1) {
                    WhiteBar.setEnabled(true);
                    imaPotez = true;
                }
                if (board.table[24 - kocka2] >= -1) {
                    WhiteBar.setEnabled(true);
                    imaPotez = true;
                }
                return imaPotez;
            } else { // ako nemamo sta da odigramo sa BAR-a           
                for (int i = 0; i < 24; i++) {
                    if (board.table[i] > 0) { // ako se nalazi na ovom polju bela figura, mozemo da skinemo ali prvo treba proveriti dal ima gde da se stavi       
                        if (((i - kocka1 < 0) || (i - kocka2 < 0)) && ReadyToTakeOff(igrac)) {
                            preslikajIndexUButton(i).setEnabled(true);
                            imaPotez = true;
                        }// da li smo spremni da izbacimo token

                        if (i - kocka1 >= 0) {
                            if (board.table[i - kocka1] >= -1) {
                                preslikajIndexUButton(i).setEnabled(true);
                                imaPotez = true;
                            }
                        }

                        if (i - kocka2 >= 0) {
                            if (board.table[i - kocka2] >= -1) {
                                preslikajIndexUButton(i).setEnabled(true);
                                imaPotez = true;
                            }
                        }
                    }
                }
            }
        } else if (igrac.boja == "black") {
            if (board.barBlack > 0) {
                if (board.table[-1 + kocka1] <= 1) {
                    BlackBar.setEnabled(true);
                    imaPotez = true;
                }
                if (board.table[kocka2 - 1] <= 1) {
                    BlackBar.setEnabled(true);
                    imaPotez = true;
                }
                return imaPotez;
            } else { // ako nemamo sta da odigramo sa BAR-a           
                for (int i = 0; i < 24; i++) {
                    if (board.table[i] < 0) { // ako se nalazi na ovom polju crna figura, mozemo da skinemo ali prvo treba proveriti dal ima gde da se stavi       
                        if (((i + kocka1 > 23) || (i + kocka2 > 23)) && ReadyToTakeOff(igrac)) {
                            preslikajIndexUButton(i).setEnabled(true);
                            imaPotez = true;
                        }// da li smo spremni da izbacimo token

                        if (i + kocka1 <= 23) {
                            if (board.table[i + kocka1] <= 1) {
                                preslikajIndexUButton(i).setEnabled(true);
                                imaPotez = true;
                            }
                        }

                        if (i + kocka2 <= 23) {
                            if (board.table[i + kocka2] <= 1) {
                                preslikajIndexUButton(i).setEnabled(true);
                                imaPotez = true;
                            }
                        }
                    }
                }
            }
        }
        return imaPotez;
    }

    public void waitForPickUp() {
        while (pickUp == 0) {
            System.out.print("");
        }
        pickUp = 0;
    }

    public int waitForPutDown() {
        while (putDown == 0) {
            System.out.print("");
        }
        putDown = 0;
        while (pisi == 0) {
            System.out.print("");
        }
        pisi = 0;
        return Math.abs(puttedTo - pickedUpFrom);
    }

    public boolean MoguciPoteziPickUp(int leftDice, Igrac igrac) {
        boolean imaPotez = false;
        Board board = Board.mainTable;
        if (igrac.boja == "white") {
            if (board.barWhite > 0) {
                if (board.table[24 - leftDice] >= -1) {
                    WhiteBar.setEnabled(true);
                    imaPotez = true;
                }

                return imaPotez;
            } else { // ako nemamo sta da odigramo sa BAR-a           
                for (int i = 0; i < 24; i++) {
                    if (board.table[i] > 0) { // ako se nalazi na ovom polju bela figura, mozemo da skinemo ali prvo treba proveriti dal ima gde da se stavi       
                        if ((i - leftDice < 0) && ReadyToTakeOff(igrac)) {
                            preslikajIndexUButton(i).setEnabled(true);
                            imaPotez = true;
                        }// da li smo spremni da izbacimo token

                        if (i - leftDice >= 0) {
                            if (board.table[i - leftDice] >= -1) {
                                preslikajIndexUButton(i).setEnabled(true);
                                imaPotez = true;
                            }
                        }

                    }
                }
            }
        } else if (igrac.boja == "black") {
            if (board.barBlack > 0) {
                if (board.table[-1 + leftDice] <= 1) {
                    BlackBar.setEnabled(true);
                    imaPotez = true;
                }

                return imaPotez;
            } else { // ako nemamo sta da odigramo sa BAR-a           
                for (int i = 0; i < 24; i++) {
                    if (board.table[i] < 0) { // ako se nalazi na ovom polju crna figura, mozemo da skinemo ali prvo treba proveriti dal ima gde da se stavi       
                        if ((i + leftDice > 23) && ReadyToTakeOff(igrac)) {
                            preslikajIndexUButton(i).setEnabled(true);
                            imaPotez = true;
                        }// da li smo spremni da izbacimo token

                        if (i + leftDice <= 23) {
                            if (board.table[i + leftDice] <= 1) {
                                preslikajIndexUButton(i).setEnabled(true);
                                imaPotez = true;
                            }
                        }

                    }
                }
            }
        }
        return imaPotez;
    }

    private JButton preslikajIndexUButton(int i) {
        switch (i) {
            case 12:
                return Polje00;
            case 13:
                return Polje01;
            case 14:
                return Polje02;
            case 15:
                return Polje03;
            case 16:
                return Polje04;
            case 17:
                return Polje05;
            case 18:
                return Polje06;
            case 19:
                return Polje07;
            case 20:
                return Polje08;
            case 21:
                return Polje09;
            case 22:
                return Polje010;
            case 23:
                return Polje011;

            case 11:
                return Polje10;
            case 10:
                return Polje11;
            case 9:
                return Polje12;
            case 8:
                return Polje13;
            case 7:
                return Polje14;
            case 6:
                return Polje15;
            case 5:
                return Polje16;
            case 4:
                return Polje17;
            case 3:
                return Polje18;
            case 2:
                return Polje19;
            case 1:
                return Polje110;
            case 0:
                return Polje111;
        };

        return null;
    }

    private boolean ReadyToTakeOff(Igrac ig) {
        Board board = Board.mainTable;

        if (ig.boja == "white") {
            if (board.barWhite > 0) {
                return false;
            }
            for (int i = 6; i < 24; i++) {
                if (board.table[i] > 0) {
                    return false;
                }
            }
        }
        if (ig.boja == "black") {
            if (board.barBlack > 0) {
                return false;
            }
            for (int i = 17; i >= 0; i--) {
                if (board.table[i] < 0) {
                    return false;
                }
            }
        }
        return true;
    }

    public void MoguciPoteziZaPutDown(int kocka1, int kocka2) {
        Board board = Board.mainTable;
        if (turnOf.boja == "white") {
            if (((pickedUpFrom - kocka1 < 0) || (pickedUpFrom - kocka2 < 0)) && ReadyToTakeOff(turnOf)) {
                WhiteGoal.setEnabled(true);
            }
            if (pickedUpFrom - kocka1 >= 0) {
                if (board.table[pickedUpFrom - kocka1] >= -1) {
                    preslikajIndexUButton(pickedUpFrom - kocka1).setEnabled(true);
                }
            }
            if (pickedUpFrom - kocka2 >= 0) {
                if (board.table[pickedUpFrom - kocka2] >= -1) {
                    preslikajIndexUButton(pickedUpFrom - kocka2).setEnabled(true);
                }
            }

        } else {
            if (((pickedUpFrom + kocka1 > 23) || (pickedUpFrom + kocka2 > 23)) && ReadyToTakeOff(turnOf)) {
                BlackGoal.setEnabled(true);
            }
            if (pickedUpFrom + kocka1 <= 23) {
                if (board.table[pickedUpFrom + kocka1] <= 1) {
                    preslikajIndexUButton(pickedUpFrom + kocka1).setEnabled(true);
                }
            }
            if (pickedUpFrom + kocka2 <= 23) {
                if (board.table[pickedUpFrom + kocka2] <= 1) {
                    preslikajIndexUButton(pickedUpFrom + kocka2).setEnabled(true);
                }
            }
        }

    }

    public void MoguciPoteziZaPutDown(int kocka1) {
        Board board = Board.mainTable;
        if (turnOf.boja == "white") {
            if (((pickedUpFrom - kocka1 < 0)) && ReadyToTakeOff(turnOf)) {
                WhiteGoal.setEnabled(true);
            }
            if (pickedUpFrom - kocka1 >= 0) {
                if (board.table[pickedUpFrom - kocka1] >= -1) {
                    preslikajIndexUButton(pickedUpFrom - kocka1).setEnabled(true);
                }
            }

        } else {
            if (((pickedUpFrom + kocka1 > 23)) && ReadyToTakeOff(turnOf)) {
                BlackGoal.setEnabled(true);
            }
            if (pickedUpFrom + kocka1 <= 23) {
                if (board.table[pickedUpFrom + kocka1] <= 1) {
                    preslikajIndexUButton(pickedUpFrom + kocka1).setEnabled(true);
                }
            }

        }

    }

    public void PobednikRunde(Igrac i, int poen) {
        JOptionPane.showMessageDialog(this, "pobednik runde je " + i.boja + " osvojio je " + poen + " poena");
    }

    public void PobednikIgre(Igrac i) {
        JOptionPane.showMessageDialog(this, "pobednik igre je " + i.boja);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BlackBar;
    private javax.swing.JButton BlackGoal;
    private javax.swing.JTextField IgraSeDo;
    private javax.swing.JButton Polje00;
    private javax.swing.JButton Polje01;
    private javax.swing.JButton Polje010;
    private javax.swing.JButton Polje011;
    private javax.swing.JButton Polje02;
    private javax.swing.JButton Polje03;
    private javax.swing.JButton Polje04;
    private javax.swing.JButton Polje05;
    private javax.swing.JButton Polje06;
    private javax.swing.JButton Polje07;
    private javax.swing.JButton Polje08;
    private javax.swing.JButton Polje09;
    private javax.swing.JButton Polje10;
    private javax.swing.JButton Polje11;
    private javax.swing.JButton Polje110;
    private javax.swing.JButton Polje111;
    private javax.swing.JButton Polje12;
    private javax.swing.JButton Polje13;
    private javax.swing.JButton Polje14;
    private javax.swing.JButton Polje15;
    private javax.swing.JButton Polje16;
    private javax.swing.JButton Polje17;
    private javax.swing.JButton Polje18;
    private javax.swing.JButton Polje19;
    private javax.swing.JTextField TurnOF;
    private javax.swing.JButton WhiteBar;
    private javax.swing.JButton WhiteGoal;
    private javax.swing.JTextField blackDice1;
    private javax.swing.JTextField blackDice2;
    private javax.swing.JButton blackRoll;
    private javax.swing.JLabel heuristikaBlack;
    private javax.swing.JLabel heuristikaWhite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField scoreBlack;
    private javax.swing.JTextField scoreWhite;
    private javax.swing.JLabel uputstvo;
    private javax.swing.JTextField whiteDice1;
    private javax.swing.JTextField whiteDice2;
    private javax.swing.JButton whiteRoll;
    // End of variables declaration//GEN-END:variables

    public void setIgraSeDo(int igraSeDo) {
        IgraSeDo.setText(Integer.toString(igraSeDo));
    }

    public void setPoeniBeli(int poeniBeli) {
        scoreWhite.setText(Integer.toString(poeniBeli));
    }

    public void setPoeniCrni(int poeniCrni) {
        scoreBlack.setText(Integer.toString(poeniCrni));
    }

    public void napisi(String text) {
        uputstvo.setText(text);
    }

    public void setVrednostiKocke(int d1, int d2, Racunar igrac) {
        if (igrac.boja == "white") {
            whiteDice1.setText(Integer.toString(d1));
            whiteDice2.setText(Integer.toString(d2));
        }
        if (igrac.boja == "black") {
            blackDice1.setText(Integer.toString(d1));
            blackDice2.setText(Integer.toString(d2));
        }
    }

    public void setHeuristic(Igrac i1, Igrac i2) {
        Board board = Board.mainTable;
        if (i1.boja == "white") {
            heuristikaWhite.setText(Integer.toString(board.Heuristic(i1)));
        } else {
            heuristikaBlack.setText(Integer.toString(board.Heuristic(i1)));
        }
        if (i2.boja == "black") {
            heuristikaBlack.setText(Integer.toString(board.Heuristic(i2)));
        } else {
            heuristikaWhite.setText(Integer.toString(board.Heuristic(i2)));
        }
    }

    public void SledeciIgrac(Igrac prviIgra) {
        
        JOptionPane.showMessageDialog(this, "NA POTEZU JE : " +prviIgra.boja );
    }

}
